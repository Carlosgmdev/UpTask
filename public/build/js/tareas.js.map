{"version":3,"sources":["tareas.js"],"names":["d","document","async","url","obtenerProyecto","respuesta","fetch","resultado","json","tareas","mostrarTareas","error","console","log","obtenerTareas","filtradas","querySelector","addEventListener","mostrarFormulario","filtrarTareas","e","filtro","target","value","filter","tarea","estado","editar","modal","createElement","classList","add","innerHTML","nombre","setTimeout","preventDefault","contains","remove","nombreTarea","trim","mostrarAlerta","actualizarTarea","datos","FormData","append","method","body","mensaje","tipo","tareaObj","id","String","proyectoId","agregarTarea","appendChild","message","type","reference","alertaPrevia","alerta","textContent","parentElement","insertBefore","nextElementSibling","proyectoParams","URLSearchParams","window","location","search","Object","fromEntries","entries","listadoTareas","firstChild","removeChild","limpiarTareas","totalPendientes","inputPendientes","length","disabled","totalCompletas","inputCompletas","arrayTareas","contenedorTareas","textoNoTareas","estados","0","1","forEach","contenedorTarea","dataset","tareaId","ondblclick","opcionesDiv","btnEstadoTarea","toLowerCase","estadoTarea","nuevoEstado","cambiarEstadoTarea","btnEliminarTarea","idTarea","Swal","fire","title","showCancelButton","confirmButtonText","cancelButtonText","then","result","isConfirmed","tareaMemoria","eliminarTarea","confirmarEliminarTarea","map","querySelectorAll","radio"],"mappings":"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","file":"tareas.js","sourcesContent":["(function() {  \r\n    const d = document;\r\n    obtenerTareas();\r\n    let tareas = [];\r\n    let filtradas = [];\r\n\r\n    const nuevaTareaBtn = d.querySelector('#agregar-tarea');\r\n    nuevaTareaBtn.addEventListener('click', function() {\r\n        mostrarFormulario();\r\n    });\r\n\r\n    const filtros = d.querySelectorAll('#filtros input[type=\"radio\"]');\r\n    filtros.forEach(radio => {\r\n        radio.addEventListener('input', filtrarTareas);\r\n    });\r\n\r\n    function filtrarTareas(e) {\r\n        const filtro = e.target.value;\r\n        if(filtro !== '') {\r\n            filtradas = tareas.filter(tarea => tarea.estado === filtro);\r\n        } else {\r\n            filtradas = [];\r\n        }\r\n        mostrarTareas();\r\n    };\r\n\r\n    function mostrarFormulario(editar = false, tarea = {}) {\r\n        const modal = d.createElement('DIV');\r\n        modal.classList.add('modal');\r\n        modal.innerHTML = `\r\n            <form class=\"formulario nueva-tarea\">\r\n                <legend>${editar ? 'Editar tarea' : 'Añade una nueva tarea'}</legend>\r\n                <div class=\"campo\">\r\n                    <label for=\"tarea\">Tarea</label>\r\n                    <input \r\n                        type=\"text\" \r\n                        name=\"tarea\" \r\n                        id=\"tarea\" \r\n                        placeholder=\"${tarea.nombre ? 'Edita la tarea' : 'Añade una tarea'}\"\r\n                        value=\"${tarea.nombre ? tarea.nombre : ''}\">\r\n                </div>\r\n                <div class=\"opciones\">\r\n                    <input type=\"submit\" class=\"submit-nueva-tarea\" value=\"${editar ? 'Guardar cambios' : 'Añadir tarea'}\">\r\n                    <button type=\"button\" class=\"cerrar-modal\">Cancelar</button>\r\n                </div>\r\n            </form>\r\n        `;\r\n        \r\n        setTimeout(() => {\r\n            const formulario = d.querySelector('.formulario');\r\n            formulario.classList.add('animar');\r\n        }, 0);\r\n\r\n        modal.addEventListener('click', (e) => {\r\n            e.preventDefault();\r\n            if(e.target.classList.contains('cerrar-modal')) {\r\n                const formulario = d.querySelector('.formulario');\r\n                formulario.classList.add('cerrar');\r\n                setTimeout(() => {\r\n                    modal.remove();\r\n                }, 500);\r\n            }\r\n\r\n            if(e.target.classList.contains('submit-nueva-tarea')) {\r\n                const nombreTarea = d.querySelector('#tarea').value.trim();\r\n                if(nombreTarea === '') {\r\n                    mostrarAlerta('DEBES DARLE UN NOMBRE A LA TAREA', 'error','.formulario legend');\r\n                    return;\r\n                }\r\n                \r\n                if(editar) {\r\n                    tarea.nombre = nombreTarea;\r\n                    actualizarTarea(tarea);\r\n                } else {\r\n                    agregarTarea(nombreTarea);\r\n                }\r\n            }\r\n        })\r\n\r\n        d.querySelector('.dashboard').appendChild(modal);\r\n    }\r\n\r\n    function mostrarAlerta(message, type, reference) {\r\n        const alertaPrevia = d.querySelector('.alerta');\r\n        if(alertaPrevia) {\r\n            alertaPrevia.remove();\r\n        }\r\n        const alerta = d.createElement('DIV');\r\n        alerta.textContent = message;\r\n        alerta.classList.add('alerta', type);\r\n        const target = d.querySelector(reference);\r\n        target.parentElement.insertBefore(alerta, target.nextElementSibling);\r\n\r\n        setTimeout(() => {\r\n            alerta.remove();\r\n        }, 5000);\r\n    }\r\n\r\n    async function agregarTarea(tarea) {\r\n        const datos = new FormData();\r\n        datos.append('nombre', tarea);\r\n        datos.append('proyectoId', obtenerProyecto());\r\n        \r\n\r\n        try {\r\n            const url = 'http://localhost:8080/api/tarea';\r\n            const respuesta = await fetch(url, {\r\n                method: 'POST',\r\n                body: datos\r\n            });\r\n            \r\n            const resultado = await respuesta.json();\r\n\r\n            mostrarAlerta(\r\n                resultado.mensaje,\r\n                resultado.tipo,\r\n                '.formulario legend'\r\n            );\r\n\r\n            if(resultado.tipo === 'exito') {\r\n                const modal = d.querySelector('.modal');\r\n                setTimeout(() => {\r\n                    modal.remove();\r\n                }, 2000);\r\n\r\n                const tareaObj = {\r\n                    id: String(resultado.id),\r\n                    nombre: tarea,\r\n                    estado: 0,\r\n                    proyectoId: resultado.proyectoId\r\n                };\r\n                tareas = [...tareas, tareaObj];\r\n                mostrarTareas();\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    function obtenerProyecto() {\r\n        const proyectoParams = new URLSearchParams(window.location.search);\r\n        const proyecto = Object.fromEntries(proyectoParams.entries());\r\n        return proyecto.id;\r\n    }\r\n\r\n    async function obtenerTareas() {\r\n        try {\r\n            const id = obtenerProyecto();\r\n            const url = `/api/tareas?id=${id}`;\r\n            const respuesta = await fetch(url);\r\n            const resultado = await respuesta.json();\r\n\r\n            tareas = resultado.tareas;\r\n            mostrarTareas();\r\n        \r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    function mostrarTareas() {\r\n        limpiarTareas();\r\n        totalPendientes();\r\n        totalCompletas();\r\n\r\n        const arrayTareas = filtradas.length ? filtradas : tareas;\r\n\r\n        if(arrayTareas.length === 0) {\r\n            const contenedorTareas = d.querySelector('#listado-tareas');\r\n            const textoNoTareas = d.createElement('LI');\r\n            textoNoTareas.textContent = 'Aun no tienes tareas, comienza agregando una 📝.';\r\n            textoNoTareas.classList.add('no-tareas');\r\n            contenedorTareas.appendChild(textoNoTareas);\r\n            return; \r\n        }\r\n\r\n        const estados = {\r\n            0: 'Pendiente',\r\n            1: 'Completado'\r\n        };\r\n\r\n        arrayTareas.forEach(tarea => {\r\n            const contenedorTarea = d.createElement('LI');\r\n            contenedorTarea.dataset.tareaId = tarea.id;\r\n            contenedorTarea.classList.add('tarea');\r\n\r\n            const nombreTarea = d.createElement('P');\r\n            nombreTarea.textContent = tarea.nombre;\r\n            nombreTarea.ondblclick = function() {\r\n                mostrarFormulario(true, {...tarea});\r\n            };\r\n\r\n            const opcionesDiv = d.createElement('DIV');\r\n            opcionesDiv.classList.add('opciones');\r\n\r\n            const btnEstadoTarea = d.createElement('BUTTON');\r\n            btnEstadoTarea.classList.add('estado-tarea');\r\n            btnEstadoTarea.classList.add(`${estados[tarea.estado].toLowerCase()}`);\r\n            btnEstadoTarea.textContent = estados[tarea.estado];\r\n            btnEstadoTarea.dataset.estadoTarea = tarea.estado;\r\n            btnEstadoTarea.ondblclick = function() {\r\n                cambiarEstadoTarea({...tarea});\r\n            };\r\n\r\n            const btnEliminarTarea = d.createElement('BUTTON');\r\n            btnEliminarTarea.classList.add('eliminar-tarea');\r\n            btnEliminarTarea.dataset.idTarea = tarea.id; \r\n            btnEliminarTarea.textContent = 'Eliminar';\r\n            btnEliminarTarea.ondblclick = function() {\r\n                confirmarEliminarTarea({...tarea});\r\n            };\r\n\r\n            opcionesDiv.appendChild(btnEstadoTarea);\r\n            opcionesDiv.appendChild(btnEliminarTarea);\r\n            contenedorTarea.appendChild(nombreTarea);\r\n            contenedorTarea.appendChild(opcionesDiv);\r\n\r\n            const contenedorTareas = d.querySelector('#listado-tareas');\r\n            contenedorTareas.appendChild(contenedorTarea);\r\n        });\r\n    }\r\n\r\n    function totalPendientes() {\r\n        const totalPendientes = tareas.filter(tarea => tarea.estado === '0');\r\n        const inputPendientes = d.querySelector('#pendientes');\r\n        if(totalPendientes.length === 0) { \r\n            inputPendientes.disabled = true;\r\n        } else {\r\n            inputPendientes.disabled = false;\r\n        }\r\n    };\r\n\r\n    function totalCompletas() {\r\n        const totalCompletas = tareas.filter(tarea => tarea.estado === '1');\r\n        const inputCompletas = d.querySelector('#completas');\r\n        if(totalCompletas.length === 0) { \r\n            inputCompletas.disabled = true;\r\n        } else {\r\n            inputCompletas.disabled = false;\r\n        }\r\n    };\r\n\r\n    function limpiarTareas() {\r\n        const listadoTareas = d.querySelector('#listado-tareas');\r\n        while(listadoTareas.firstChild) {\r\n            listadoTareas.removeChild(listadoTareas.firstChild);\r\n        }\r\n    }\r\n\r\n    function cambiarEstadoTarea(tarea) {\r\n        const nuevoEstado = tarea.estado === '1' ? '0' : '1';\r\n        tarea.estado = nuevoEstado;\r\n        actualizarTarea(tarea);\r\n    }\r\n\r\n    async function actualizarTarea(tarea) {\r\n        const {estado, id, nombre} = tarea;\r\n        const datos = new FormData();\r\n        datos.append('id', id);\r\n        datos.append('nombre', nombre);\r\n        datos.append('estado', estado);\r\n        datos.append('proyectoId', obtenerProyecto());\r\n        try {\r\n            const url = 'http://localhost:8080/api/tarea/actualizar';\r\n            const respuesta = await fetch(url, {\r\n                method: 'POST',\r\n                body: datos\r\n            });\r\n            const resultado = await respuesta.json();\r\n            if(resultado.respuesta.tipo === 'exito') {\r\n                Swal.fire(\r\n                    resultado.respuesta.mensaje,\r\n                    resultado.respuesta.mensaje,\r\n                    'success'\r\n                );\r\n\r\n                const modal = d.querySelector('.modal');\r\n                if(modal) {\r\n                    tareaMemoria.estado = estado;\r\n\r\n                }\r\n\r\n                tareas = tareas.map(tareaMemoria => {\r\n                    if(tareaMemoria.id === id) {\r\n                        tareaMemoria.estado = estado;\r\n                        tareaMemoria.nombre = nombre;\r\n                    }\r\n                    return tareaMemoria;\r\n                });\r\n                mostrarTareas();\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    function confirmarEliminarTarea(tarea) {\r\n        Swal.fire({\r\n            title: '¿Estas seguro de eliminar la tarea?',\r\n            showCancelButton: true,\r\n            confirmButtonText: 'Si',\r\n            cancelButtonText: 'No',\r\n        }).then((result) => {\r\n            if (result.isConfirmed) {\r\n                eliminarTarea(tarea);\r\n            }\r\n        })\r\n    }\r\n\r\n    async function eliminarTarea(tarea) {\r\n        const {estado, id, nombre} = tarea;\r\n        const datos = new FormData();\r\n        datos.append('id', id);\r\n        datos.append('nombre', nombre);\r\n        datos.append('estado', estado);\r\n        datos.append('proyectoId', obtenerProyecto());\r\n        try {\r\n            const url = 'http://localhost:8080/api/tarea/eliminar';\r\n            const respuesta = await fetch(url, {\r\n                method: 'POST',\r\n                body: datos\r\n            });\r\n            const resultado = await respuesta.json();\r\n            if(resultado.resultado) {\r\n                Swal.fire(\r\n                    '¡Eliminado!',\r\n                    resultado.mensaje,\r\n                    'success'\r\n                );\r\n                tareas = tareas.filter(tareaMemoria => tareaMemoria.id !== tarea.id);\r\n                mostrarTareas();\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n})();"]}